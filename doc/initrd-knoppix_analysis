
THIS File looks for ideas, constructions of LINBO to help TCOS

* Useful Constants

# Reset fb color mode
RESET="]R"
# ANSI COLORS
# Erase to end of line
CRE="[K"
# Clear entire screen
CLEAR="[H[J"
# Normal color
NORMAL="[0;39m"
# RED: Failure or error message
RED="[1;31m"
# GREEN: Success message
GREEN="[1;32m"
# YELLOW: Descriptions
YELLOW="[1;33m"
# BLUE: System mesages
BLUE="[1;34m"
# MAGENTA: Found devices or drivers
MAGENTA="[1;35m"
# CYAN: Questions
CYAN="[1;36m"
# BOLD WHITE: Hint
WHITE="[1;37m"

* TARGET-Layout

/ (rootfs)
/bin ->		/union/bin
/etc ->		/union/etc
/home ->	/union/home
/lib ->		/union/lib
/mnt
 /to/nfs	nfsserver
 /to/local	(flashdrive, nfs-to-local-copy, hdd)
/media
/opt ->		/union/opt
/root ->	/union/root
/union (aufs)->	/ram(rw):[nfs|local]/Base.sfs:Application.sfsâ€¦
/usr ->		/union/usr
/sbin ->	/union/sbin

"->" are links to be set

* cmdline interpretation

read CMDLINE < /proc/cmdline

checkbootparam(){
 local p
 for p in $CMDLINE; do
  case "$p" in $p|$p=*) return 0;; esac
 done
 return 1
}
#only for parameters with values, use checkbootparam() otherwise

bashify(){
 
 #replaces . * + * and whitespace with underscore`
 
 local v=`echo $1 | cut -d "=" -f1 | sed 's/[.?+* ]/\_/g'`
 return "$v"=`echo $1 | cut -d "=" -f2`
}

getbootparams(){ 
 local p
 for p in $CMDLINE; do
  case "$p" in *=*) eval `bashify "$p"`;; esac
 done
 return 0
}

