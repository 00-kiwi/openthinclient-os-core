#!/bin/sh
#
# LINBO busybox-based initramfs bootscript
# (C) 2013 by Steffen Hoenig <s.hoenig@openthinclient.com>
#	      Joern Frenzel <j.frenzel@openthinclient.com>
# LICENSE: GPL V3

# Its purpose:
# 1. Mounting a squashfs container over nfs
# 2. Unifying this ro conainter with ramdisk and file overlay
# 3. Hand over control to "real" sysv init.

# Preconditions:
# - Kernel contains all _needed_ nfs, ethernet, aufs modules

DISTRO="TCOS"

. /init_functions

TCOSLINK="/tcos/link"       # nfs             OTC-Server:/openthinclient # the initial one!
TCOSWRITE="/tcos/write"     # for aufs to write this is just a folder inside the /
TCOSBASE="/tcos/base"       # squashfs # via loopback sfs-file: /tcos/link/sfs/base.sfs
TCOSPACKAGEBASE="/tcos/packages/opt"

## MAIN ####################################################

for folder in $TCOSLINK $TCOSWRITE $TCOSBASE $TCOSPACKAGEBASE /proc /sys; do mkdir -p $folder ; done 

mount -t proc proc /proc
mount -t sysfs sys /sys

mdev -s && echo "/dev...set up by ${BLUE}mdev${NORMAL}"

export PATH=/bin:/usr/bin:/sbin

read CMDLINE < /proc/cmdline

getbootparams


#to override the dhcpd setting set up a HOSTNAME here
HOSTNAME="" 

ip addr add 127.0.0.1/8 dev lo
ip link set dev lo up

DHCP=""

for i in 0; do
	echo "${CRE}${BLUE}DHCP Broadcasting for IP address (${MAGENTA}eth$i${BLUE})... ${NORMAL}"
	ip link set dev eth$i up
	if [ -n "$HOSTNAME" ]; then
   	 udhcpc -i eth$i -H $HOSTNAME -s /etc/udhcpc/default.script && DHCP="eth$i"
  	else
   	 udhcpc -i eth$i -s /etc/udhcpc/default.script && DHCP="eth$i"
  	fi
	[ -n "$DHCP" ] && break
	echo "${RED}No answer from network.${NORMAL}"
	debugshell
done


# NFS
MOUNTED=""

[ -n $nfsroot ] && NFSD=$nfsroot

touch /etc/fstab
mount -t nfs -o nolock -o ro -o retrans=10 -o vers=2 "$NFSD" $TCOSLINK 

if [ $? -eq 0 ]; then 
  MOUNTED="true" 
  echo "$NFSD mounted ${GREEN} successfully...${NORMAL}"
else 
  echo "${RED} could not mount $NFSD - exiting. ${NORMAL}"
  exit 1
fi


# mount base and module sfs files
[ -f "$TCOSLINK/sfs/base.sfs" ] || (echo "${RED} could not find $TCOSLINK/sfs/base.sfs - exiting. ${NORMAL}" && exit 1)
mount -t squashfs -o loop,ro "$TCOSLINK/sfs/base.sfs" $TCOSBASE || (echo "${RED} could not mount $TCOSLINK/sfs/base.sfs - exiting. ${NORMAL}" && exit 1)

debugshell

# exit 0
#########

# other SFS
# mount module sfs and packages sfs

BRANCHES="$TCOSBASE"
MODULE_FILES=`ls $TCOSLINK/sfs/module/*.sfs 2>/dev/null | sort` # just to have it ordered
for i in $MODULE_FILES; do
    TARGET="$TCOSPACKAGEBASE/$(echo $(basename $i) | sed 's/\.sfs$//g')"
    mkdir -p "$TARGET"
    mount -t squashfs -o loop,ro "$i" "$TARGET"
    BRANCHES="$TARGET $BRANCHES"
done

BRANCHES=`echo $BRANCHES | sed "s/ /=rr:/g"`=rr

echo "------>     $BRANCHES"

debugshell

exit 0

# mount union
# 
mount -t aufs -o nowarn_perm,br:$TCOSWRITE=rw:$BRANCHES aufs /SHADOW






