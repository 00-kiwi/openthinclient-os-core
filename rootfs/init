#!/bin/sh
#
# LINBO busybox-based initramfs bootscript
# (C) 2013 by Steffen Hoenig <s.hoenig@openthinclient.com>
#	      Joern Frenzel <j.frenzel@openthinclient.com>
# LICENSE: GPL V3

# Its purpose:
# 1. Mounting a squashfs container over nfs
# 2. Unifying this ro conainter with ramdisk and file overlay
# 3. Hand over control to "real" sysv init.

# Preconditions:
# - Kernel contains all _needed_ nfs, ethernet, aufs modules

DISTRO="TCOS"

. /init_functions

## MAIN ####################################################

mount -t proc proc /proc
mount -t sysfs sys /sys

mdev -s && echo "/dev...set up by ${BLUE}mdev${NORMAL}"

for d in base link packages write; do
	mkdir -p /tcos/"$d"
done
mkdir -p /shadow

export PATH=/bin:/usr/bin:/sbin

read CMDLINE < /proc/cmdline

getbootparams


#to override the dhcpd setting set up a HOSTNAME here
HOSTNAME="" 

ip addr add 127.0.0.1/8 dev lo
ip link set dev lo up

DHCP=""

for i in 0; do
	echo "${CRE}${BLUE}DHCP Broadcasting for IP address (${MAGENTA}eth$i${BLUE})... ${NORMAL}"
	ip link set dev eth$i up
	if [ -n "$HOSTNAME" ]; then
   	 udhcpc -i eth$i -H $HOSTNAME -s /etc/udhcpc/default.script && DHCP="eth$i"
  	else
   	 udhcpc -i eth$i -s /etc/udhcpc/default.script && DHCP="eth$i"
  	fi
	[ -n "$DHCP" ] && break
	echo "${RED}No answer from network.${NORMAL}"
	debugshell
done


# NFS

MOUNTED=""

[ -n $nfsroot ] && NFSD=$nfsroot
mount -o nolock -o ro -o retrans=10 "$NFSD" /tcos/link && MOUNTED="true" && echo "$NFSD mounted ${GREEN} successfully...${NORMAL}"

touch /etc/fstab

debugshell


exit 0
#########


BRANCHES=/

# mount base and module sfs files
if [ -d "$rootmnt/sfs" ]; then
        BASE_FILE=`ls $rootmnt/sfs/base.sfs 2>/dev/null`
        MODULE_FILES=`ls $rootmnt/sfs/module/*.sfs 2>/dev/null | sort`

        # mount base file
        if [ "$BASE_FILE" ]; then
                mount -t squashfs -o loop,ro "$BASE_FILE" /base
                MOVEMOUNTS="/base"
                BRANCHES="/base"
        fi

        # mount modules
        for i in $MODULE_FILES; do
                TARGET="/module/$(echo $(basename $i) | sed 's/\.sfs$//g')"
                mkdir -p "$TARGET"
                mount -t squashfs -o loop,ro "$i" "$TARGET"
                MOVEMOUNTS="$MOVEMOUNTS $TARGET"
                if [ "$BRANCHES" ]; then
                        BRANCHES="$TARGET $BRANCHES"
                else
                        BRANCHES="$TARGET"
                fi
        done

        BRANCHES=`echo $BRANCHES | sed "s/ /=rr:/g"`=rr
fi
