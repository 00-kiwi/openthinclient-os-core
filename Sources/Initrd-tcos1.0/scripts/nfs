# NFS filesystem mounting			-*- shell-script -*-

# FIXME This needs error checking

# Paramter: Where the root should be mounted
mountroot ()
{
	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/nfs-top"
	run_scripts /scripts/nfs-top
	[ "$quiet" != "y" ] && log_end_msg

	modprobe -qb nfs
	# For DHCP
	modprobe -qb af_packet

	ifconfig ${DEVICE:-eth0} up 2>/dev/null
	# bail out if ethernet device not supported
	if [ ${?} -ne 0 ]; then
		for i in /sys/bus/pci/devices/*/class; do
			case `cat $i` in
			0x020000)
				vendor=`cat ${i%/*}/vendor`
				device=`cat ${i%/*}/device`
				panic "Ethernet device ${vendor#0x*}:${device#0x*} not supported!"
				break
				;;
			esac
		done	
	fi

	# wait for link detected
	until [ "`ethtool ${DEVICE:-eth0} | sed -n 's/.*Link detected: \(.*\).*/\1/p'`" = "yes" ]; do

                sleep 0.5
        done

	if [ "${ip}" ]; then
		ipconfig ${ip}
	else
		ipconfig ${DEVICE:-eth0}
	fi
	. /tmp/net-${DEVICE:-eth0}.conf
	if [ "x${NFSROOT}" = "xauto" ]; then
		NFSROOT=${ROOTSERVER}:${ROOTPATH}
	fi

	if [ "x${NFSOPTS}" = "x" ]; then
		NFSOPTS="-o retrans=10"
	fi

	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/nfs-premount"
	run_scripts /scripts/nfs-premount
	[ "$quiet" != "y" ] && log_end_msg

	if [ ${readonly} = y ]; then
		roflag="-o ro"
	else
		roflag="-o rw"
	fi

	mount -o nolock ${roflag} ${NFSOPTS} ${NFSROOT} ${rootmnt}

	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/nfs-bottom"
	run_scripts /scripts/nfs-bottom
	[ "$quiet" != "y" ] && log_end_msg

}
