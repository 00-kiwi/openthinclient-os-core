#!/usr/bin/env python

import base64
import commands
import fileinput
import glob
import ldapurl
import os
import re
import pytcos.tcos as tcos
import tempfile

from string import Template

u = tcos.Util()
s = tcos.System()
l = tcos.Ldap()

mac = s.getMac()
ldap_url = s.getLdapUrl()
client_dn = l.getClientDn(mac, ldap_url)
devices_dn = l.getDevicesDn(client_dn, ldap_url)
locations_dn = l.getLocationsDn(client_dn, ldap_url)
locations_entry = l.getNismapentry(locations_dn, ldap_url)

hostname = l.getCnByDn(client_dn)
ip_eth0 = commands.getoutput("LANG=C ifconfig eth0 2>/dev/null | sed -n 's/.*inet addr:\\([0-9.]\\+\\).*/\\1/p'")

# functions
def writeSyslog_ng(filename="/etc/syslog-ng/syslog-ng.conf"):
	logserver = s.getNfsrootServer()

	f = open(filename, "w")
	f.write("source s_all {\n" + 
	        "\tinternal();\n" + 
	        '\tunix-stream("/dev/log");\n' +
	        '\tfile("/proc/kmsg" log_prefix("kernel: "));\n' +
	        "};\n\n" +
	        "destination remote {\n" +
	        '\tudp("' + logserver + '" template("<$PRI>$DATE ' + mac + ' $MSG"));\n' +
	        "};\n\n" +
	        "log {" +
	        "\tsource(s_all);\n" +
	        "\tdestination(remote);\n" +
	        "};")
	f.close()

def startSyslog_ng(initscript="/etc/init.d/syslog-ng"):
	remove_cmdstatus = commands.getstatusoutput("update-rc.d -f `basename " +
	                                            initscript + "` remove")[0]
	start_status = commands.getstatusoutput(initscript + " restart")[0]
	if remove_cmdstatus == 0 and start_status == 0:
		commands.getstatusoutput("update-rc.d syslog-ng stop 90 0 1 6 .")

def symlinkLocaltime(destination="/etc/localtime"):
	localtime = locations_entry.get("Time.localtime", "posix/Etc/GMT")
	source = "/usr/share/zoneinfo/" + localtime

	u.symlinkSave(source, destination)

def writeEnvironment(filename="/etc/environment"):
	path = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11"
	lang = locations_entry.get("Lang.lang", "en_US.UTF-8")
	language = lang.split(".",1)[0]
	
	entry_dict = {
	              "export LANG" : lang,
					  "export PATH" : path,
	              "export LANGUAGE" : language,
					  }
	
	u.writeDictionaryToFile(entry_dict, filename)

def writeNtpdate(filename="/etc/default/ntpdate"):
	ntpservers = locations_entry.get("Time.ntpservers", "pool.ntp.org")
	ntpoptions = "-u"

	entry_dict = {"NTPSERVERS" : ntpservers,
	              "NTPOPTIONS" : ntpoptions}
	
	u.writeDictionaryToFile(entry_dict, filename)

# main
if __name__ == "__main__":
	writeSyslog_ng("/etc/syslog-ng/syslog-ng.conf")
	# start syslog as early as possible
	startSyslog_ng("/etc/init.d/syslog-ng")
	writeResolvConf("/etc/resolv.conf")
	symlinkLocaltime("/etc/localtime")
	writeEnvironment("/etc/environment")
	writeNtpdate("/etc/default/ntpdate")
